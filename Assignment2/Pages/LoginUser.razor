@page "/LoginUser"

@using Microsoft.AspNetCore.Components
@using Assignment2.Authentification
@inject IAuthManager _authManager

<h3>Login User</h3>

<AuthorizeView>
    <Authorized>
        <p>
            You are already logged in!<br/>
            Would you like to <a href="../LogoutUser">log out</a>?
        </p>
    </Authorized>
    <NotAuthorized>
        <div class="card">
            <div class="form-group field">
                <label>User name:</label>
                <input type="text" @bind="username" @bind:event="oninput"/>
                @if (!string.IsNullOrEmpty(resultMsg))
                {
                    <label style="color: @color">@resultMsg</label>
                }
            </div>
            <div class="form-group field">
                <label>Password:</label>
                <input type="text" @bind="password" @bind:event="oninput"/>
                @if (!string.IsNullOrEmpty(resultMsg))
                {
                    <label style="color: @color">@resultMsg</label>
                }
            </div>
            <div class="button-row">
                <button @onclick="Login" disabled="@(string.IsNullOrEmpty(username) || string.IsNullOrEmpty(password))" class="acceptbtn">Login</button>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string username = "";
    private string password = "";
    private string resultMsg = "";
    private string color = "";
    
    private async Task Login()
    {
        resultMsg = "";

        try
        {
            await _authManager.LoginAsync(username, password);
            username = "";
            password = "";
            resultMsg = "User successfully logged in";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}